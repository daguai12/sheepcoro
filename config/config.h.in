/**
 * @file config.h.in
 * @author daguai
 * @version 1.0
 */

#ifndef CONFIG_H
#define CONFIG_H

#include "coro/detail/types.hpp"
#define VERSION_MAJOR "@PROJECT_VERSION_MAJOR@"
#define VERSION_MINOR "@PROJECT_VERSION_MINOR@"

#include "stddef.h"
#include "stdint.h"
#include "time.h"
#include <limits>


#define SOURCE_DIR "@PROJECT_SOURCE_DIR@"

namespace coro::config
{
#define LOG_LEVEL info
#define USEMUTEX

constexpr const char* kLogFileName = "/temp/logs/coro.log";

constexpr int64_t kFlushDura = 3; // seconds

// 设置缓存大小，64位操作系统缓存大小为64byte
constexpr size_t kCacheLineSize = 64;

#define ENABLE_MEMORY_ALLOC

constexpr unsigned int kEntryLength = 10240;

constexpr bool kEnableFixfd = false;

constexpr unsigned int kFixFdArraySize = 8;


constexpr unsigned int kSqthreadIdle = 2000; // millseconds


// ========================= execute engine configuration ======================
// 协程id变量
using ctx_id = uint32_t;


// 引擎任务队列长度，至少大于4096
// 若向已满任务队列提交任务:
// 1. 若在工作线程中：直接执行该任务
// 2. 若不在工作线程中：报告错误并忽略任务
constexpr size_t kQueCap = 16384;

// 调度器分发策略
constexpr coro::detail::dispatch_strategy kDispatchStrategy = coro::detail::dispatch_strategy::round_robin;


constexpr size_t kMaxRecursiveDepth = 4096;

inline bool kLongRunMode = true;

constexpr int kDefaultPort = 8000;
constexpr int kBacklog     = 5;
constexpr int kMaxTestTaskNum = 100000;
};     // namespace coro::config
#endif // CONFIG_H
